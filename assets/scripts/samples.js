var sampleConfig =
{
  "simple-chart": {
    "code": "import Component from '@ember/component';\n\nexport default Component.extend({\n    width: 600,\n    height: 400,\n    type: 'column2d',\n    dataFormat: 'json',\n    dataSource: {/* see data tab */}\n});",
    "html": "{{fusioncharts-xt\n    width=width\n    height=height\n    type=type\n    dataFormat=dataFormat\n    dataSource=dataSource}}",
    "data": "{\r\n    \"chart\": {\r\n        \"caption\": \"Countries With Most Oil Reserves [2017-18]\",\r\n        \"subCaption\": \"In MMbbl = One Million barrels\",\r\n        \"xAxisName\": \"Country\",\r\n        \"yAxisName\": \"Reserves (MMbbl)\",\r\n        \"numberSuffix\": \"K\",\r\n        \"theme\": \"fusion\"\r\n    },\r\n    \"data\": [\r\n        {\r\n            \"label\": \"Venezuela\",\r\n            \"value\": \"290\"\r\n        },\r\n        {\r\n            \"label\": \"Saudi\",\r\n            \"value\": \"260\"\r\n        },\r\n        {\r\n            \"label\": \"Canada\",\r\n            \"value\": \"180\"\r\n        },\r\n        {\r\n            \"label\": \"Iran\",\r\n            \"value\": \"140\"\r\n        },\r\n        {\r\n            \"label\": \"Russia\",\r\n            \"value\": \"115\"\r\n        },\r\n        {\r\n            \"label\": \"UAE\",\r\n            \"value\": \"100\"\r\n        },\r\n        {\r\n            \"label\": \"US\",\r\n            \"value\": \"30\"\r\n        },\r\n        {\r\n            \"label\": \"China\",\r\n            \"value\": \"30\"\r\n        }\r\n    ]\r\n}\r\n",
    "ember-build": "/* eslint-env node */\n'use strict';\n\nconst EmberAddon = require('ember-cli/lib/broccoli/ember-addon');\n\nmodule.exports = function (defaults) {\n    let app = new EmberAddon(defaults, {\n        // Add options here\n    });\n\n    // Import FusionCharts library\n    app.import('bower_components/fusioncharts/fusioncharts.js');\n    app.import('bower_components/fusioncharts/fusioncharts.charts.js');        \n    app.import('bower_components/fusioncharts/themes/fusioncharts.theme.fusion.js');    \n\n    /*\n      This build file specifies the options for the dummy test app of this\n      addon, located in `/tests/dummy`\n      This build file does *not* influence how the addon or the app using it\n      behave. You most likely want to be modifying `./index.js` or app's build file\n    */\n\n    return app.toTree();\n};"
  },
  "3d-pie-chart": {
    "code": "import Component from '@ember/component';\n\nexport default Component.extend({\n    width: 600,\n    height: 400,\n    type: 'pie3d',\n    dataFormat: 'json',\n    dataSource: {/* see data tab */}\n});",
    "html": "{{fusioncharts-xt\n    width=width\n    height=height\n    type=type\n    dataFormat=dataFormat\n    dataSource=dataSource}}",
    "data": "{\r\n    \"chart\": {\r\n        \"caption\": \"Recommended Portfolio Split\",\r\n        \"subCaption\" : \"For a net-worth of $1M\",\r\n        \"showValues\":\"1\",\r\n        \"showPercentInTooltip\" : \"0\",\r\n        \"numberPrefix\" : \"$\",\r\n        \"enableMultiSlicing\":\"1\",\r\n        \"theme\": \"fusion\"\r\n    },\r\n    \"data\": [\r\n        {\r\n            \"label\": \"Equity\",\r\n            \"value\": \"300000\"\r\n        }, {\r\n            \"label\": \"Debt\",\r\n            \"value\": \"230000\"\r\n        }, {\r\n            \"label\": \"Bullion\",\r\n            \"value\": \"180000\"\r\n        }, {\r\n            \"label\": \"Real-estate\",\r\n            \"value\": \"270000\"\r\n        }, {\r\n            \"label\": \"Insurance\",\r\n            \"value\": \"20000\"\r\n        }\r\n    ]\r\n}\r\n",
    "ember-build": "/* eslint-env node */\n'use strict';\n\nconst EmberAddon = require('ember-cli/lib/broccoli/ember-addon');\n\nmodule.exports = function (defaults) {\n    let app = new EmberAddon(defaults, {\n        // Add options here\n    });\n\n    // Import FusionCharts library\n    app.import('bower_components/fusioncharts/fusioncharts.js');\n    app.import('bower_components/fusioncharts/fusioncharts.charts.js');        \n    app.import('bower_components/fusioncharts/themes/fusioncharts.theme.fusion.js');    \n\n    /*\n      This build file specifies the options for the dummy test app of this\n      addon, located in `/tests/dummy`\n      This build file does *not* influence how the addon or the app using it\n      behave. You most likely want to be modifying `./index.js` or app's build file\n    */\n\n    return app.toTree();\n};"
  },
  "column-line-area-combi-chart": {
    "code": "import Component from '@ember/component';\n\nexport default Component.extend({\n    width: 600,\n    height: 400,\n    type: 'mscombi2d',\n    dataFormat: 'json',\n    dataSource: {/* see data tab */}\n});",
    "html": "{{fusioncharts-xt\n    width=width\n    height=height\n    type=type\n    dataFormat=dataFormat\n    dataSource=dataSource}}",
    "data": "{\r\n    \"chart\": {\r\n        \"caption\": \"Expense Analysis\",\r\n        \"subCaption\": \"ACME Inc.\",\r\n        \"xAxisname\": \"Region\",\r\n        \"yAxisName\": \"Amount (In USD)\",\r\n        \"numberPrefix\": \"$\",\r\n        \"theme\": \"fusion\"\r\n    },\r\n    \"categories\": [\r\n        {\r\n            \"category\": [\r\n                {\r\n                    \"label\": \"East\"\r\n                },\r\n                {\r\n                    \"label\": \"West\"\r\n                },\r\n                {\r\n                    \"label\": \"South\"\r\n                },\r\n                {\r\n                    \"label\": \"North\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"dataset\": [\r\n        {\r\n            \"seriesName\": \"Actual Expenses\",\r\n            \"data\": [\r\n                {\r\n                    \"value\": \"1441290\"\r\n                },\r\n                {\r\n                    \"value\": \"855912\"\r\n                },\r\n                {\r\n                    \"value\": \"911404\"\r\n                },\r\n                {\r\n                    \"value\": \"648136\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"seriesName\": \"Budgeted Expenses\",\r\n            \"renderAs\": \"line\",\r\n            \"data\": [\r\n                {\r\n                    \"value\": \"1297430\"\r\n                },\r\n                {\r\n                    \"value\": \"776485\"\r\n                },\r\n                {\r\n                    \"value\": \"685352\"\r\n                },\r\n                {\r\n                    \"value\": \"726791\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"seriesName\": \"Unknown liabilities\",\r\n            \"renderAs\": \"area\",\r\n            \"showAnchors\" : \"0\",\r\n            \"data\": [\r\n                {\r\n                    \"value\": \"143860\"\r\n                },\r\n                {\r\n                    \"value\": \"79427\"\r\n                },\r\n                {\r\n                    \"value\": \"226052\"\r\n                },\r\n                {\r\n                    \"value\": \"78655\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n",
    "ember-build": "/* eslint-env node */\n'use strict';\n\nconst EmberAddon = require('ember-cli/lib/broccoli/ember-addon');\n\nmodule.exports = function (defaults) {\n    let app = new EmberAddon(defaults, {\n        // Add options here\n    });\n\n    // Import FusionCharts library\n    app.import('bower_components/fusioncharts/fusioncharts.js');\n    app.import('bower_components/fusioncharts/fusioncharts.charts.js');        \n    app.import('bower_components/fusioncharts/themes/fusioncharts.theme.fusion.js');    \n\n    /*\n      This build file specifies the options for the dummy test app of this\n      addon, located in `/tests/dummy`\n      This build file does *not* influence how the addon or the app using it\n      behave. You most likely want to be modifying `./index.js` or app's build file\n    */\n\n    return app.toTree();\n};"
  },
  "fetch-data-from-json-url": {
    "code": "import Component from '@ember/component';\n\nexport default Component.extend({\n    width: 600,\n    height: 400,\n    type: 'column2d',\n    dataFormat: 'jsonurl',\n    dataSource: 'data.json' /* see data tab */\n});",
    "html": "{{fusioncharts-xt\n    width=width\n    height=height\n    type=type\n    dataFormat=dataFormat\n    dataSource=dataSource}}",
    "data": "{\r\n    \"chart\": {\r\n        \"caption\": \"Countries With Most Oil Reserves [2017-18]\",\r\n        \"subCaption\": \"In MMbbl = One Million barrels\",\r\n        \"xAxisName\": \"Country\",\r\n        \"yAxisName\": \"Reserves (MMbbl)\",\r\n        \"numberSuffix\": \"K\",\r\n        \"theme\": \"fusion\"\r\n    },\r\n    \"data\": [\r\n        {\r\n            \"label\": \"Venezuela\",\r\n            \"value\": \"290\"\r\n        },\r\n        {\r\n            \"label\": \"Saudi\",\r\n            \"value\": \"260\"\r\n        },\r\n        {\r\n            \"label\": \"Canada\",\r\n            \"value\": \"180\"\r\n        },\r\n        {\r\n            \"label\": \"Iran\",\r\n            \"value\": \"140\"\r\n        },\r\n        {\r\n            \"label\": \"Russia\",\r\n            \"value\": \"115\"\r\n        },\r\n        {\r\n            \"label\": \"UAE\",\r\n            \"value\": \"100\"\r\n        },\r\n        {\r\n            \"label\": \"US\",\r\n            \"value\": \"30\"\r\n        },\r\n        {\r\n            \"label\": \"China\",\r\n            \"value\": \"30\"\r\n        }\r\n    ]\r\n}\r\n",
    "ember-build": "/* eslint-env node */\n'use strict';\n\nconst EmberAddon = require('ember-cli/lib/broccoli/ember-addon');\n\nmodule.exports = function (defaults) {\n    let app = new EmberAddon(defaults, {\n        // Add options here\n    });\n\n    // Import FusionCharts library\n    app.import('bower_components/fusioncharts/fusioncharts.js');\n    app.import('bower_components/fusioncharts/fusioncharts.charts.js');        \n    app.import('bower_components/fusioncharts/themes/fusioncharts.theme.fusion.js');    \n\n    /*\n      This build file specifies the options for the dummy test app of this\n      addon, located in `/tests/dummy`\n      This build file does *not* influence how the addon or the app using it\n      behave. You most likely want to be modifying `./index.js` or app's build file\n    */\n\n    return app.toTree();\n};"
  },
  "fetch-data-from-xml-url": {
    "code": "import Component from '@ember/component';\n\nexport default Component.extend({\n    width: 600,\n    height: 400,\n    type: 'column2d',\n    dataFormat: 'xmlurl',\n    dataSource: 'data.xml' /* see data tab */\n});",
    "html": "{{fusioncharts-xt\n    width=width\n    height=height\n    type=type\n    dataFormat=dataFormat\n    dataSource=dataSource}}",
    "data": "<chart caption=\"Countries With Most Oil Reserves [2017-18]\" subcaption=\"In MMbbl = One Million barrels\" xaxisname=\"Country\" yaxisname=\"Reserves (MMbbl)\" numbersuffix=\"K\" theme=\"fusion\">\r\n    <set label=\"Venezuela\" value=\"290\" \/>\r\n    <set label=\"Saudi\" value=\"260\" \/>\r\n    <set label=\"Canada\" value=\"180\" \/>\r\n    <set label=\"Iran\" value=\"140\" \/>\r\n    <set label=\"Russia\" value=\"115\" \/>\r\n    <set label=\"UAE\" value=\"100\" \/>\r\n    <set label=\"US\" value=\"30\" \/>\r\n    <set label=\"China\" value=\"30\" \/>\r\n<\/chart>\r\n",
    "ember-build": "/* eslint-env node */\n'use strict';\n\nconst EmberAddon = require('ember-cli/lib/broccoli/ember-addon');\n\nmodule.exports = function (defaults) {\n    let app = new EmberAddon(defaults, {\n        // Add options here\n    });\n\n    // Import FusionCharts library\n    app.import('bower_components/fusioncharts/fusioncharts.js');\n    app.import('bower_components/fusioncharts/fusioncharts.charts.js');        \n    app.import('bower_components/fusioncharts/themes/fusioncharts.theme.fusion.js');    \n\n    /*\n      This build file specifies the options for the dummy test app of this\n      addon, located in `/tests/dummy`\n      This build file does *not* influence how the addon or the app using it\n      behave. You most likely want to be modifying `./index.js` or app's build file\n    */\n\n    return app.toTree();\n};"
  },
  "update-chart-data": {
    "code": "import Component from '@ember/component';\n\nfunction getRandomNumber() {\n    var max = 300, min = 50;\n    return Math.round(((max - min) * Math.random()) + min);\n}\n\nexport default Component.extend({\n    width: 600,\n    height: 400,\n    type: 'column2d',\n    dataFormat: 'json',\n    dataSource: {/* see data tab */},\n    actions: {\n        updateData() {\n            const prevDs = Object.assign({}, this.get('dataSource'));            \n            prevDs.data[2].value = getRandomNumber();            \n            prevDs.data[3].value = getRandomNumber();\n            this.set('dataSource', prevDs);\n        }\n    }\n});",
    "html": "{{fusioncharts-xt\n    width=width\n    height=height\n    type=type\n    dataFormat=dataFormat\n    dataSource=dataSource}}\n\n<button {{action \"updateData\"}}>CHANGE CHART DATA</button>",
    "data": "{\r\n    \"chart\": {\r\n        \"caption\": \"Countries With Most Oil Reserves [2017-18]\",\r\n        \"subCaption\": \"In MMbbl = One Million barrels\",\r\n        \"xAxisName\": \"Country\",\r\n        \"yAxisName\": \"Reserves (MMbbl)\",\r\n        \"numberSuffix\": \"K\",\r\n        \"theme\": \"fusion\",\r\n        \"updateAnimDuration\":\"0.4\"\r\n    },\r\n    \"data\": [\r\n        {\r\n            \"label\": \"Venezuela\",\r\n            \"value\": \"290\"\r\n        },\r\n        {\r\n            \"label\": \"Saudi\",\r\n            \"value\": \"260\"\r\n        },\r\n        {\r\n            \"label\": \"Canada\",\r\n            \"value\": \"180\"\r\n        },\r\n        {\r\n            \"label\": \"Iran\",\r\n            \"value\": \"140\"\r\n        },\r\n        {\r\n            \"label\": \"Russia\",\r\n            \"value\": \"115\"\r\n        },\r\n        {\r\n            \"label\": \"UAE\",\r\n            \"value\": \"100\"\r\n        },\r\n        {\r\n            \"label\": \"US\",\r\n            \"value\": \"30\"\r\n        },\r\n        {\r\n            \"label\": \"China\",\r\n            \"value\": \"30\"\r\n        }\r\n    ]\r\n}\r\n",
    "ember-build": "/* eslint-env node */\n'use strict';\n\nconst EmberAddon = require('ember-cli/lib/broccoli/ember-addon');\n\nmodule.exports = function (defaults) {\n    let app = new EmberAddon(defaults, {\n        // Add options here\n    });\n\n    // Import FusionCharts library\n    app.import('bower_components/fusioncharts/fusioncharts.js');\n    app.import('bower_components/fusioncharts/fusioncharts.charts.js');        \n    app.import('bower_components/fusioncharts/themes/fusioncharts.theme.fusion.js');    \n\n    /*\n      This build file specifies the options for the dummy test app of this\n      addon, located in `/tests/dummy`\n      This build file does *not* influence how the addon or the app using it\n      behave. You most likely want to be modifying `./index.js` or app's build file\n    */\n\n    return app.toTree();\n};"
  },
  "update-chart-attributes": {
    "code": "import Component from '@ember/component';\n\nconst dataSource = { /* See data tab */ };\n\nexport default Component.extend({    \n    width: 600,\n    height: 400,\n    type: 'column2d',\n    dataFormat: 'json',\n    dataSource: dataSource,\n    actions: {\n        changeBackgroundColor() {\n            const prevDs = JSON.parse(JSON.stringify(this.get('dataSource')));\n            prevDs.chart.bgColor = '#efefef';\n            this.set('dataSource', prevDs);\n        },\n        changeCaptionTextAlignment() {\n            const prevDs = JSON.parse(JSON.stringify(this.get('dataSource')));            \n            prevDs.chart.captionAlignment = 'left';\n            this.set('dataSource', prevDs);\n        },\n        reset() {            \n            this.set('dataSource', dataSource);\n        }\n    }\n});",
    "html": "{{fusioncharts-xt\n    width=width\n    height=height\n    type=type\n    dataFormat=dataFormat\n    dataSource=dataSource}}\n\n<button {{action \"changeBackgroundColor\"}}>CHANGE BACKGROUND</button>\n<button {{action \"changeCaptionTextAlignment\"}}>CHANGE CAPTION ALIGNMENT</button>\n<button {{action \"reset\"}}>RESET</button>",
    "data": "{\r\n    \"chart\": {\r\n      \"caption\": \"Countries With Most Oil Reserves [2017-18]\",\r\n      \"subCaption\": \"In MMbbl = One Million barrels\",\r\n      \"xAxisName\": \"Country\",\r\n      \"yAxisName\": \"Reserves (MMbbl)\",\r\n      \"numberSuffix\": \"K\",\r\n      \"theme\": \"fusion\"\r\n    },\r\n    \"data\": [\r\n        {\r\n            \"label\": \"Venezuela\",\r\n            \"value\": \"290\"\r\n        },\r\n        {\r\n            \"label\": \"Saudi\",\r\n            \"value\": \"260\"\r\n        },\r\n        {\r\n            \"label\": \"Canada\",\r\n            \"value\": \"180\"\r\n        },\r\n        {\r\n            \"label\": \"Iran\",\r\n            \"value\": \"140\"\r\n        },\r\n        {\r\n            \"label\": \"Russia\",\r\n            \"value\": \"115\"\r\n        },\r\n        {\r\n            \"label\": \"UAE\",\r\n            \"value\": \"100\"\r\n        },\r\n        {\r\n            \"label\": \"US\",\r\n            \"value\": \"30\"\r\n        },\r\n        {\r\n            \"label\": \"China\",\r\n            \"value\": \"30\"\r\n        }\r\n    ]\r\n}\r\n",
    "ember-build": "/* eslint-env node */\n'use strict';\n\nconst EmberAddon = require('ember-cli/lib/broccoli/ember-addon');\n\nmodule.exports = function (defaults) {\n    let app = new EmberAddon(defaults, {\n        // Add options here\n    });\n\n    // Import FusionCharts library\n    app.import('bower_components/fusioncharts/fusioncharts.js');\n    app.import('bower_components/fusioncharts/fusioncharts.charts.js');        \n    app.import('bower_components/fusioncharts/themes/fusioncharts.theme.fusion.js');    \n\n    /*\n      This build file specifies the options for the dummy test app of this\n      addon, located in `/tests/dummy`\n      This build file does *not* influence how the addon or the app using it\n      behave. You most likely want to be modifying `./index.js` or app's build file\n    */\n\n    return app.toTree();\n};"
  },
  "trigger-events-from-chart": {
    "code": "import Component from '@ember/component';\n\nexport default Component.extend({    \n    width: 600,\n    height: 400,\n    type: 'column2d',\n    dataFormat: 'json',\n    dataSource: { /* see data tab */ },\n    events: null,\n    message: 'Hover on the plot to see the value along with the label',\n\n    init() {\n        this._super(...arguments);\n        const self = this;\n        this.set('events', {\n            dataplotRollOver: function (eventObj, dataObj) {\n                self.set('message', 'You are currently hovering over ' + dataObj.categoryLabel + ' whose value is ' + dataObj.displayValue);\n            },\n            dataPlotRollOut: function(eventObj, dataObj) {                \n                self.set('message', 'Hover on the plot to see the value along with the label');\n            }\n        });\n    }    \n});",
    "html": "{{fusioncharts-xt\n    width=width\n    height=height\n    type=type\n    dataFormat=dataFormat\n    dataSource=dataSource\n    events=events}}\n\n<p>{{ message }}</p>",
    "data": "{\r\n    \"chart\": {\r\n        \"caption\": \"Countries With Most Oil Reserves [2017-18]\",\r\n        \"subCaption\": \"In MMbbl = One Million barrels\",\r\n        \"xAxisName\": \"Country\",\r\n        \"yAxisName\": \"Reserves (MMbbl)\",\r\n        \"numberSuffix\": \"K\",\r\n        \"theme\": \"fusion\"\r\n    },\r\n    \"data\": [\r\n        {\r\n            \"label\": \"Venezuela\",\r\n            \"value\": \"290\"\r\n        },\r\n        {\r\n            \"label\": \"Saudi\",\r\n            \"value\": \"260\"\r\n        },\r\n        {\r\n            \"label\": \"Canada\",\r\n            \"value\": \"180\"\r\n        },\r\n        {\r\n            \"label\": \"Iran\",\r\n            \"value\": \"140\"\r\n        },\r\n        {\r\n            \"label\": \"Russia\",\r\n            \"value\": \"115\"\r\n        },\r\n        {\r\n            \"label\": \"UAE\",\r\n            \"value\": \"100\"\r\n        },\r\n        {\r\n            \"label\": \"US\",\r\n            \"value\": \"30\"\r\n        },\r\n        {\r\n            \"label\": \"China\",\r\n            \"value\": \"30\"\r\n        }\r\n    ]\r\n}\r\n",
    "ember-build": "/* eslint-env node */\n'use strict';\n\nconst EmberAddon = require('ember-cli/lib/broccoli/ember-addon');\n\nmodule.exports = function (defaults) {\n    let app = new EmberAddon(defaults, {\n        // Add options here\n    });\n\n    // Import FusionCharts library\n    app.import('bower_components/fusioncharts/fusioncharts.js');\n    app.import('bower_components/fusioncharts/fusioncharts.charts.js');        \n    app.import('bower_components/fusioncharts/themes/fusioncharts.theme.fusion.js');    \n\n    /*\n      This build file specifies the options for the dummy test app of this\n      addon, located in `/tests/dummy`\n      This build file does *not* influence how the addon or the app using it\n      behave. You most likely want to be modifying `./index.js` or app's build file\n    */\n\n    return app.toTree();\n};"
  },
  "percentage-calculation": {
    "code": "import Component from '@ember/component';\n\nconst dataSource = {/* see data tab */};\n\nvar total = dataSource.data.reduce((p,c) => p + Number(c.value), 0);\n\nexport default Component.extend({    \n    width: 600,\n    height: 400,\n    type: 'column2d',\n    dataFormat: 'json',\n    dataSource: dataSource,    \n    events: null,\n    message: 'Hover on the plot to see the percentage along with the label',\n\n    init() {\n        this._super(...arguments);\n        const self = this;\n        this.set('events', {\n            dataplotRollOver: function (eventObj, dataObj) {\n                var value = (dataObj.value / total * 100).toFixed(2);\n                self.set('message', dataObj.categoryLabel + ' is ' + value +'% of top 8 oil reserve countries');\n            },\n            dataplotRollOut: function (eventObj, dataObj) {\n                self.set('message', 'Hover on the plot to see the percentage along with the label');\n            }\n        });\n    }    \n});",
    "html": "{{fusioncharts-xt\n    width=width\n    height=height\n    type=type\n    dataFormat=dataFormat\n    dataSource=dataSource\n    events=events}}\n\n<p>{{ message }}</p>",
    "data": "{\r\n  \"chart\": {\r\n      \"caption\": \"Countries With Most Oil Reserves [2017-18]\",\r\n      \"subCaption\": \"In MMbbl = One Million barrels\",\r\n      \"xAxisName\": \"Country\",\r\n      \"yAxisName\": \"Reserves (MMbbl)\",\r\n      \"numberSuffix\": \"K\",\r\n      \"theme\": \"fusion\"\r\n  },\r\n  \"data\": [\r\n      {\r\n          \"label\": \"Venezuela\",\r\n          \"value\": \"290\"\r\n      },\r\n      {\r\n          \"label\": \"Saudi\",\r\n          \"value\": \"260\"\r\n      },\r\n      {\r\n          \"label\": \"Canada\",\r\n          \"value\": \"180\"\r\n      },\r\n      {\r\n          \"label\": \"Iran\",\r\n          \"value\": \"140\"\r\n      },\r\n      {\r\n          \"label\": \"Russia\",\r\n          \"value\": \"115\"\r\n      },\r\n      {\r\n          \"label\": \"UAE\",\r\n          \"value\": \"100\"\r\n      },\r\n      {\r\n          \"label\": \"US\",\r\n          \"value\": \"30\"\r\n      },\r\n      {\r\n          \"label\": \"China\",\r\n          \"value\": \"30\"\r\n      }\r\n  ]\r\n}\r\n",
    "ember-build": "/* eslint-env node */\n'use strict';\n\nconst EmberAddon = require('ember-cli/lib/broccoli/ember-addon');\n\nmodule.exports = function (defaults) {\n    let app = new EmberAddon(defaults, {\n        // Add options here\n    });\n\n    // Import FusionCharts library\n    app.import('bower_components/fusioncharts/fusioncharts.js');\n    app.import('bower_components/fusioncharts/fusioncharts.charts.js');        \n    app.import('bower_components/fusioncharts/themes/fusioncharts.theme.fusion.js');    \n\n    /*\n      This build file specifies the options for the dummy test app of this\n      addon, located in `/tests/dummy`\n      This build file does *not* influence how the addon or the app using it\n      behave. You most likely want to be modifying `./index.js` or app's build file\n    */\n\n    return app.toTree();\n};"
  },
  "export-charts": {
    "code": "import Component from '@ember/component';\n\nexport default Component.extend({\n    width: 600,\n    height: 400,\n    chartType1: 'column2d',\n    dataFormat: 'json',\n    dataSource1: dataSource.data1,    \n    chartType2: 'stackedcolumn2d',    \n    dataSource2: dataSource.data2,\n    actions: {\n        exportPdf() {\n            FusionCharts.batchExport({\n                exportFormat: 'pdf'\n            });\n        }\n    }        \n});",
    "html": "{{fusioncharts-xt\n        width=width\n        height=height\n        type=chartType1\n        dataFormat=dataFormat\n        dataSource=dataSource1}}\n\n{{fusioncharts-xt\n    width=width\n    height=height\n    type=chartType2\n    dataFormat=dataFormat\n    dataSource=dataSource2\n    events=events}}\n    \n<button {{action \"exportPdf\"}}>EXPORT BOTH CHART AS SINGLE PDF</button>",
    "data": "{\r\n    data1: {\r\n        \"chart\": {\r\n            \"caption\": \"Countries With Most Oil Reserves [2017-18]\",\r\n            \"subCaption\": \"In MMbbl = One Million barrels\",\r\n            \"xAxisName\": \"Country\",\r\n            \"yAxisName\": \"Reserves (MMbbl)\",\r\n            \"numberSuffix\": \"K\",\r\n            \"theme\": \"fusion\"\r\n        },\r\n        \"data\": [\r\n            {\r\n                \"label\": \"Venezuela\",\r\n                \"value\": \"290\"\r\n            },\r\n            {\r\n                \"label\": \"Saudi\",\r\n                \"value\": \"260\"\r\n            },\r\n            {\r\n                \"label\": \"Canada\",\r\n                \"value\": \"180\"\r\n            },\r\n            {\r\n                \"label\": \"Iran\",\r\n                \"value\": \"140\"\r\n            },\r\n            {\r\n                \"label\": \"Russia\",\r\n                \"value\": \"115\"\r\n            },\r\n            {\r\n                \"label\": \"UAE\",\r\n                \"value\": \"100\"\r\n            },\r\n            {\r\n                \"label\": \"US\",\r\n                \"value\": \"30\"\r\n            },\r\n            {\r\n                \"label\": \"China\",\r\n                \"value\": \"30\"\r\n            }\r\n        ]\r\n    },\r\n    data2: {\r\n        \"chart\": {\r\n            \"caption\": \"Yearly Energy Production Rate\",\r\n            \"subCaption\": \" Top 5 Developed Countries\",\r\n            \"numbersuffix\": \" TWh\",\r\n            \"showSum\": \"1\",\r\n            \"plotToolText\": \"$label produces <b>$dataValue<\/b> of energy from $seriesName\",\r\n            \"theme\": \"fusion\"\r\n        },\r\n        \"categories\": [\r\n            {\r\n                \"category\": [\r\n                    {\r\n                        \"label\": \"Canada\"\r\n                    },\r\n                    {\r\n                        \"label\": \"China\"\r\n                    },\r\n                    {\r\n                        \"label\": \"Russia\"\r\n                    },\r\n                    {\r\n                        \"label\": \"Australia\"\r\n                    },\r\n                    {\r\n                        \"label\": \"United States\"\r\n                    },\r\n                    {\r\n                        \"label\": \"France\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"dataSet\": [\r\n            {\r\n                \"seriesName\": \"Coal\",\r\n                \"data\": [\r\n                    {\r\n                        \"value\": \"400\"\r\n                    },\r\n                    {\r\n                        \"value\": \"830\"\r\n                    },\r\n                    {\r\n                        \"value\": \"500\"\r\n                    },\r\n                    {\r\n                        \"value\": \"420\"\r\n                    },\r\n                    {\r\n                        \"value\": \"790\"\r\n                    },\r\n                    {\r\n                        \"value\": \"380\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"seriesName\": \"Hydro\",\r\n                \"data\": [\r\n                    {\r\n                        \"value\": \"350\"\r\n                    },\r\n                    {\r\n                        \"value\": \"620\"\r\n                    },\r\n                    {\r\n                        \"value\": \"410\"\r\n                    },\r\n                    {\r\n                        \"value\": \"370\"\r\n                    },\r\n                    {\r\n                        \"value\": \"720\"\r\n                    },\r\n                    {\r\n                        \"value\": \"310\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"seriesName\": \"Nuclear\",\r\n                \"data\": [\r\n                    {\r\n                        \"value\": \"210\"\r\n                    },\r\n                    {\r\n                        \"value\": \"400\"\r\n                    },\r\n                    {\r\n                        \"value\": \"450\"\r\n                    },\r\n                    {\r\n                        \"value\": \"180\"\r\n                    },\r\n                    {\r\n                        \"value\": \"570\"\r\n                    },\r\n                    {\r\n                        \"value\": \"270\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"seriesName\": \"Gas\",\r\n                \"data\": [\r\n                    {\r\n                        \"value\": \"180\"\r\n                    },\r\n                    {\r\n                        \"value\": \"330\"\r\n                    },\r\n                    {\r\n                        \"value\": \"230\"\r\n                    },\r\n                    {\r\n                        \"value\": \"160\"\r\n                    },\r\n                    {\r\n                        \"value\": \"440\"\r\n                    },\r\n                    {\r\n                        \"value\": \"350\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"seriesName\": \"Oil\",\r\n                \"data\": [\r\n                    {\r\n                        \"value\": \"60\"\r\n                    },\r\n                    {\r\n                        \"value\": \"200\"\r\n                    },\r\n                    {\r\n                        \"value\": \"200\"\r\n                    },\r\n                    {\r\n                        \"value\": \"50\"\r\n                    },\r\n                    {\r\n                        \"value\": \"230\"\r\n                    },\r\n                    {\r\n                        \"value\": \"150\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
    "ember-build": "/* eslint-env node */\n'use strict';\n\nconst EmberAddon = require('ember-cli/lib/broccoli/ember-addon');\n\nmodule.exports = function (defaults) {\n    let app = new EmberAddon(defaults, {\n        // Add options here\n    });\n\n    // Import FusionCharts library\n    app.import('bower_components/fusioncharts/fusioncharts.js');\n    app.import('bower_components/fusioncharts/fusioncharts.charts.js');        \n    app.import('bower_components/fusioncharts/themes/fusioncharts.theme.fusion.js');    \n\n    /*\n      This build file specifies the options for the dummy test app of this\n      addon, located in `/tests/dummy`\n      This build file does *not* influence how the addon or the app using it\n      behave. You most likely want to be modifying `./index.js` or app's build file\n    */\n\n    return app.toTree();\n};"
  },
  "drill-down": {
    "code": "import Component from '@ember/component';\n\nexport default Component.extend({    \n    id: 'drill-chart',    \n    width: 600,\n    height: 400,\n    type: 'column2d',\n    dataFormat: 'json',\n    dataSource: {/* see data tabe */}},\n    init() {\n        this._super(...arguments);\n        const self = this;\n        this.set('events', {\n            rendered: function (eventObj, dataObj) {\n                FusionCharts.items['drill-chart'].configureLink({\n                    type: 'pie2d',\n                    width: '500',\n                    overlayButton: {\n                      message: 'Back',\n                      fontColor: '880000',\n                      bgColor: 'FFEEEE',\n                      borderColor: '660000',\n                    },\n                }, 0);\n            }\n        });\n    }\n});",
    "html": "{{fusioncharts-xt\n    width=width\n    height=height\n    type=type\n    dataFormat=dataFormat\n    dataSource=dataSource}}",
    "data": "{\r\n    \"chart\": {\r\n        \"caption\": \"Sales of top 3 juice flavors last year\",\r\n        \"subcaption\": \"Click on a column to see details\",\r\n        \"xaxisname\": \"Flavor\",\r\n        \"yaxisname\": \"Amount (In USD)\",\r\n        \"numberprefix\": \"$\",\r\n        \"theme\": \"fusion\",\r\n        \"rotateValues\": \"0\"\r\n    },\r\n    \"data\": [\r\n        {\r\n            \"label\": \"Apple\",\r\n            \"value\": \"810000\",\r\n            \"link\": \"newchart-xml-apple\"\r\n        },\r\n        {\r\n            \"label\": \"Cranberry\",\r\n            \"value\": \"620000\",\r\n            \"link\": \"newchart-xml-cranberry\"\r\n        },\r\n        {\r\n            \"label\": \"Grape\",\r\n            \"value\": \"350000\",\r\n            \"link\": \"newchart-xml-grape\"\r\n        }\r\n    ],\r\n    \"linkeddata\": [\r\n        {\r\n            \"id\": \"apple\",\r\n            \"linkedchart\": {\r\n                \"chart\": {\r\n                    \"caption\": \"Apple Juice - Quarterly Sales\",\r\n                    \"subcaption\": \"Last year\",\r\n                    \"numberprefix\": \"$\",\r\n                    \"theme\": \"fusion\",\r\n                    \"rotateValues\": \"0\",\r\n                    \"plottooltext\": \"$label, $dataValue,  $percentValue\"\r\n                },\r\n                \"data\": [{\r\n                    \"label\": \"Q1\",\r\n                    \"value\": \"157000\",\r\n                    \"displayValue\": \"Q1, $157K\"\r\n                }, {\r\n                    \"label\": \"Q2\",\r\n                    \"value\": \"172000\",\r\n                    \"displayValue\": \"Q2, $172K\"\r\n                }, {\r\n                    \"label\": \"Q3\",\r\n                    \"value\": \"206000\",\r\n                    \"displayValue\": \"Q3, $206K\"\r\n                }, {\r\n                    \"label\": \"Q4\",\r\n                    \"value\": \"275000\",\r\n                    \"displayValue\": \"Q4, $275K\"\r\n                }]\r\n            }\r\n        },\r\n        {\r\n            \"id\": \"cranberry\",\r\n            \"linkedchart\": {\r\n                \"chart\": {\r\n                    \"caption\": \"Cranberry Juice - Quarterly Sales\",\r\n                    \"subcaption\": \"Last year\",\r\n                    \"numberprefix\": \"$\",\r\n                    \"theme\": \"fusion\",\r\n                    \"plottooltext\": \"$label, $dataValue,  $percentValue\"\r\n                },\r\n                \"data\": [\r\n                    {\r\n                        \"label\": \"Q1\",\r\n                        \"value\": \"102000\",\r\n                        \"displayValue\": \"Q1, $102K\"\r\n                    },\r\n                    {\r\n                        \"label\": \"Q2\",\r\n                        \"value\": \"142000\",\r\n                        \"displayValue\": \"Q2, $142K\"\r\n                    },\r\n                    {\r\n                        \"label\": \"Q3\",\r\n                        \"value\": \"187000\",\r\n                        \"displayValue\": \"Q3, $187K\"\r\n                    },\r\n                    {\r\n                        \"label\": \"Q4\",\r\n                        \"value\": \"189000\",\r\n                        \"displayValue\": \"Q4, $189K\"\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"id\": \"grape\",\r\n            \"linkedchart\": {\r\n                \"chart\": {\r\n                    \"caption\": \"Grape Juice - Quarterly Sales\",\r\n                    \"subcaption\": \"Last year\",\r\n                    \"numberprefix\": \"$\",\r\n                    \"theme\": \"fusion\",\r\n                    \"rotateValues\": \"0\",\r\n                    \"plottooltext\": \"$label, $dataValue,  $percentValue\"\r\n                },\r\n                \"data\": [{\r\n                    \"label\": \"Q1\",\r\n                    \"value\": \"45000\",\r\n                    \"displayValue\": \"Q1, $45K\"\r\n                }, {\r\n                    \"label\": \"Q2\",\r\n                    \"value\": \"72000\",\r\n                    \"displayValue\": \"Q2, $72K\"\r\n                }, {\r\n                    \"label\": \"Q3\",\r\n                    \"value\": \"95000\",\r\n                    \"displayValue\": \"Q3, $95K\"\r\n                }, {\r\n                    \"label\": \"Q4\",\r\n                    \"value\": \"108000\",\r\n                    \"displayValue\": \"Q4, $108K\"\r\n                }]\r\n            }\r\n        }\r\n    ]\r\n}\r\n",
    "ember-build": "/* eslint-env node */\n'use strict';\n\nconst EmberAddon = require('ember-cli/lib/broccoli/ember-addon');\n\nmodule.exports = function (defaults) {\n    let app = new EmberAddon(defaults, {\n        // Add options here\n    });\n\n    // Import FusionCharts library\n    app.import('bower_components/fusioncharts/fusioncharts.js');\n    app.import('bower_components/fusioncharts/fusioncharts.charts.js');        \n    app.import('bower_components/fusioncharts/themes/fusioncharts.theme.fusion.js');    \n\n    /*\n      This build file specifies the options for the dummy test app of this\n      addon, located in `/tests/dummy`\n      This build file does *not* influence how the addon or the app using it\n      behave. You most likely want to be modifying `./index.js` or app's build file\n    */\n\n    return app.toTree();\n};"
  },
  "simple-gauge": {
    "code": "import Component from '@ember/component';\n\nexport default Component.extend({\n    width: 600,\n    height: 400,\n    type: 'angulargauge',\n    dataFormat: 'json',\n    dataSource: {/* see data tab */}\n});",
    "html": "{{fusioncharts-xt\n    width=width\n    height=height\n    type=type\n    dataFormat=dataFormat\n    dataSource=dataSource}}",
    "data": "{\r\n    \"chart\": {\r\n        \"caption\": \"Nordstorm's Customer Satisfaction Score for 2017\",\r\n        \"lowerLimit\": \"0\",\r\n        \"upperLimit\": \"100\",\r\n        \"showValue\": \"1\",\r\n        \"numberSuffix\": \"%\",\r\n        \"theme\": \"fusion\",\r\n        \"showToolTip\": \"0\"\r\n    },\r\n    \"colorRange\": {\r\n        \"color\": [\r\n            {\r\n                \"minValue\": \"0\",\r\n                \"maxValue\": \"50\",\r\n                \"code\": \"#F2726F\"\r\n            }, {\r\n                \"minValue\": \"50\",\r\n                \"maxValue\": \"75\",\r\n                \"code\": \"#FFC533\"\r\n            }, {\r\n                \"minValue\": \"75\",\r\n                \"maxValue\": \"100\",\r\n                \"code\": \"#62B58F\"\r\n            }\r\n        ]\r\n    },\r\n    \"dials\": {\r\n        \"dial\": [\r\n            {\r\n                \"value\": \"81\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
    "ember-build": "/* eslint-env node */\n'use strict';\n\nconst EmberAddon = require('ember-cli/lib/broccoli/ember-addon');\n\nmodule.exports = function (defaults) {\n    let app = new EmberAddon(defaults, {\n        // Add options here\n    });\n\n    // Import FusionCharts library\n    app.import('bower_components/fusioncharts/fusioncharts.js');\n    app.import('bower_components/fusioncharts/fusioncharts.charts.js');\n    app.import('bower_components/fusioncharts/fusioncharts.widgets.js');        \n    app.import('bower_components/fusioncharts/themes/fusioncharts.theme.fusion.js');    \n\n    /*\n      This build file specifies the options for the dummy test app of this\n      addon, located in `/tests/dummy`\n      This build file does *not* influence how the addon or the app using it\n      behave. You most likely want to be modifying `./index.js` or app's build file\n    */\n\n    return app.toTree();\n};"
  },
  "world-map": {
    "code": "import Component from '@ember/component';\n\nexport default Component.extend({\n    width: 600,\n    height: 400,\n    type: 'maps/world',\n    dataFormat: 'json',\n    dataSource: {/* see data tab */}\n});",
    "html": "{{fusioncharts-xt\n    width=width\n    height=height\n    type=type\n    dataFormat=dataFormat\n    dataSource=dataSource}}",
    "data": "{\r\n    \"chart\": {\r\n        \"caption\": \"Average Annual Population Growth\",\r\n        \"subcaption\": \" 1955-2015\",\r\n        \"numbersuffix\": \"%\",\r\n        \"includevalueinlabels\": \"1\",\r\n        \"labelsepchar\": \": \",\r\n        \"entityFillHoverColor\": \"#FFF9C4\",\r\n        \"theme\": \"fusion\"\r\n    },\r\n    \"colorrange\": {\r\n        \"minvalue\": \"0\",\r\n        \"code\": \"#FFE0B2\",\r\n        \"gradient\": \"1\",\r\n        \"color\": [\r\n            {\r\n                \"minvalue\": \"0.5\",\r\n                \"maxvalue\": \"1.0\",\r\n                \"color\": \"#FFD74D\"\r\n            },\r\n            {\r\n                \"minvalue\": \"1.0\",\r\n                \"maxvalue\": \"2.0\",\r\n                \"color\": \"#FB8C00\"\r\n            },\r\n            {\r\n                \"minvalue\": \"2.0\",\r\n                \"maxvalue\": \"3.0\",\r\n                \"color\": \"#E65100\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": [\r\n        {\r\n            \"id\": \"NA\",\r\n            \"value\": \".82\",\r\n            \"showLabel\": \"1\"\r\n        },\r\n        {\r\n            \"id\": \"SA\",\r\n            \"value\": \"2.04\",\r\n            \"showLabel\": \"1\"\r\n        },\r\n        {\r\n            \"id\": \"AS\",\r\n            \"value\": \"1.78\",\r\n            \"showLabel\": \"1\"\r\n        },\r\n        {\r\n            \"id\": \"EU\",\r\n            \"value\": \".40\",\r\n            \"showLabel\": \"1\"\r\n        },\r\n        {\r\n            \"id\": \"AF\",\r\n            \"value\": \"2.58\",\r\n            \"showLabel\": \"1\"\r\n        },\r\n        {\r\n            \"id\": \"AU\",\r\n            \"value\": \"1.30\",\r\n            \"showLabel\": \"1\"\r\n        }\r\n    ]\r\n}\r\n",
    "ember-build": "/* eslint-env node */\n'use strict';\n\nconst EmberAddon = require('ember-cli/lib/broccoli/ember-addon');\n\nmodule.exports = function (defaults) {\n    let app = new EmberAddon(defaults, {\n        // Add options here\n    });\n\n    // Import FusionCharts library\n    app.import('bower_components/fusioncharts/fusioncharts.js');\n    app.import('bower_components/fusioncharts/fusioncharts.maps.js');\n    app.import('bower_components/fusioncharts/maps/fusioncharts.world.js');         \n    app.import('bower_components/fusioncharts/themes/fusioncharts.theme.fusion.js');    \n\n    /*\n      This build file specifies the options for the dummy test app of this\n      addon, located in `/tests/dummy`\n      This build file does *not* influence how the addon or the app using it\n      behave. You most likely want to be modifying `./index.js` or app's build file\n    */\n\n    return app.toTree();\n};"
  },
  "apply-theme": {
    "code": "import Component from '@ember/component';\n\nexport default Component.extend({    \n    id: 'theme-chart',    \n    width: 600,\n    height: 350,\n    type: 'column2d',\n    dataFormat: 'json',\n    dataSource: { /* see data tab */ },        \n    actions: {\n        changeTheme(value) {\n            FusionCharts.items['theme-chart'].setChartAttribute('theme', value);\n        }        \n    }    \n});",
    "html": "{{fusioncharts-xt\n    id=id\n    width=width\n    height=height\n    type=type\n    dataFormat=dataFormat\n    dataSource=dataSource\n    events=events    }}    \n\n<div id=\"config-container\">\n    <span id=\"select-text\">Choose a theme:</span>\n    <div class=\"change-type\">\n      <div id=\"radio1\">\n        <input name=\"theme-selector\" id=\"radioButton1\" type=\"radio\" value=\"fusion\" checked=\"checked\" onchange={{ action \"changeTheme\" value=\"target.value\" }}/>\n        <label for=\"radioButton1\">Fusion</label>\n      </div>\n      <div id=\"radio2\">\n        <input name=\"theme-selector\" id=\"radioButton2\" type=\"radio\" value=\"gammel\" onchange={{ action \"changeTheme\" value=\"target.value\" }}/>\n        <label for=\"radioButton2\">Gammel</label>\n      </div>\n      <div id=\"radio3\">\n        <input name=\"theme-selector\" id=\"radioButton3\" type=\"radio\" value=\"candy\" onchange={{ action \"changeTheme\" value=\"target.value\" }}/>\n        <label for=\"radioButton3\">Candy</label>\n      </div>\n      <div id=\"radio4\">\n        <input name=\"theme-selector\" id=\"radioButton4\" type=\"radio\" value=\"zune\" onchange={{ action \"changeTheme\" value=\"target.value\" }}/>\n        <label for=\"radioButton4\">Zune</label>\n      </div>\n      <div id=\"radio5\">\n        <input name=\"theme-selector\" id=\"radioButton5\" type=\"radio\" value=\"ocean\" onchange={{ action \"changeTheme\" value=\"target.value\" }}/>\n        <label for=\"radioButton5\">Ocean</label>\n      </div>\n      <div id=\"radio6\">\n        <input name=\"theme-selector\" id=\"radioButton6\" type=\"radio\" value=\"carbon\" onchange={{ action \"changeTheme\" value=\"target.value\" }}/>\n        <label for=\"radioButton6\">Carbon</label>\n      </div>\n    </div>\n  </div>",
    "data": "{\r\n  \"chart\": {\r\n      \"caption\": \"Countries With Most Oil Reserves [2017-18]\",\r\n      \"subCaption\": \"In MMbbl = One Million barrels\",\r\n      \"xAxisName\": \"Country\",\r\n      \"yAxisName\": \"Reserves (MMbbl)\",\r\n      \"numberSuffix\": \"K\",\r\n      \"theme\": \"gammel\"\r\n  },\r\n  \"data\": [\r\n      {\r\n          \"label\": \"Venezuela\",\r\n          \"value\": \"290\"\r\n      },\r\n      {\r\n          \"label\": \"Saudi\",\r\n          \"value\": \"260\"\r\n      },\r\n      {\r\n          \"label\": \"Canada\",\r\n          \"value\": \"180\"\r\n      },\r\n      {\r\n          \"label\": \"Iran\",\r\n          \"value\": \"140\"\r\n      },\r\n      {\r\n          \"label\": \"Russia\",\r\n          \"value\": \"115\"\r\n      },\r\n      {\r\n          \"label\": \"UAE\",\r\n          \"value\": \"100\"\r\n      },\r\n      {\r\n          \"label\": \"US\",\r\n          \"value\": \"30\"\r\n      },\r\n      {\r\n          \"label\": \"China\",\r\n          \"value\": \"30\"\r\n      }\r\n  ]\r\n}\r\n"    ,
    "ember-build": "/* eslint-env node */\n'use strict';\n\nconst EmberAddon = require('ember-cli/lib/broccoli/ember-addon');\n\nmodule.exports = function (defaults) {\n    let app = new EmberAddon(defaults, {\n        // Add options here\n    });\n\n    // Import FusionCharts library\n    app.import('bower_components/fusioncharts/fusioncharts.js');\n    app.import('bower_components/fusioncharts/fusioncharts.charts.js');    \n    app.import('bower_components/fusioncharts/themes/fusioncharts.theme.fusion.js');\n    app.import('bower_components/fusioncharts/themes/fusioncharts.theme.gammel.js');\n    app.import('bower_components/fusioncharts/themes/fusioncharts.theme.candy.js');\n    app.import('bower_components/fusioncharts/themes/fusioncharts.theme.zune.js');\n    app.import('bower_components/fusioncharts/themes/fusioncharts.theme.ocean.js');\n    app.import('bower_components/fusioncharts/themes/fusioncharts.theme.carbon.js');    \n\n    /*\n      This build file specifies the options for the dummy test app of this\n      addon, located in `/tests/dummy`\n      This build file does *not* influence how the addon or the app using it\n      behave. You most likely want to be modifying `./index.js` or app's build file\n    */\n\n    return app.toTree();\n};"
  },
  "special-events": {
    "code": "import Component from '@ember/component';\n\nexport default Component.extend({    \n    width: 600,\n    height: 400,\n    type: 'dragcolumn2d',\n    dataFormat: 'json',\n    dataSource: { /* see data tab */ },    \n    events: null,\n    message: 'Drag any column for years 2017 or 2018 to see updated value along with the label',\n\n    init() {\n        this._super(...arguments);\n        const self = this;\n        this.set('events', {\n            dataplotdragend: function (eventObj, dataObj) {\n                self.set('message', dataObj.datasetName + ' is modified to $' + FusionCharts.formatNumber(dataObj.endValue.toFixed(2)) + 'M from $' + FusionCharts.formatNumber(dataObj.startValue.toFixed(2)) + 'M');\n            }\n        });\n    }    \n});",
    "html": "{{fusioncharts-xt\n    width=width\n    height=height\n    type=type\n    dataFormat=dataFormat\n    dataSource=dataSource\n    events=events}}\n\n<p style=\"padding: 10px; background: rgb(245, 242, 240);\">{{ message }}</p>",
    "data": "{\n    \"chart\": {\n        \"caption\": \"Android and iOS Devices Sales Projections\",\n        \"subCaption\": \"Drag the top of columns to adjust projections for 2017 & 2018\",\n        \"numberPrefix\": \"$\",\n        \"numberSuffix\": \"M\",\n        \"yaxismaxvalue\": \"200\",\n        \"theme\": \"fusion\",\n        \"plotToolText\": \"<b>$label</b><br>$seriesName: <b>$dataValue</b>\"\n    },\n    \"categories\": [{\n        \"category\": [{\n            \"label\": \"2014\",\n            \"fontItalic\": \"0\"\n        }, {\n            \"label\": \"2015\",\n            \"fontItalic\": \"0\"\n        }, {\n            \"label\": \"2016\",\n            \"fontItalic\": \"0\"\n        }, {\n            \"label\": \"2017 (Projected)\"\n        }, {\n            \"label\": \"2018 (Projected)\"\n        }]\n    }],\n    \"dataset\": [{\n        \"seriesname\": \"Android Devices\",\n        \"data\": [{\n            \"value\": \"73\",\n            \"alpha\": \"100\",\n            \"allowDrag\": \"0\"\n        }, {\n            \"value\": \"80\",\n            \"alpha\": \"100\",\n            \"allowDrag\": \"0\"\n        }, {\n            \"value\": \"97\",\n            \"alpha\": \"100\",\n            \"allowDrag\": \"0\"\n        }, {\n            \"value\": \"110\",\n            \"toolText\": \"<b>$label</b><br>$seriesName: <b>$dataValue</b>\"\n        }, {\n            \"value\": \"180\",\n            \"toolText\": \"<b>$label</b><br>$seriesName: <b>$dataValue</b>\"\n        }]\n    }, {\n        \"seriesname\": \"iOS Devices\",\n        \"data\": [{\n            \"value\": \"63.2\",\n            \"alpha\": \"100\",\n            \"allowDrag\": \"0\"\n        }, {\n            \"value\": \"68\",\n            \"alpha\": \"100\",\n            \"allowDrag\": \"0\"\n        }, {\n            \"value\": \"82\",\n            \"alpha\": \"100\",\n            \"allowDrag\": \"0\"\n        }, {\n            \"value\": \"99\",\n            \"toolText\": \"<b>$label</b><br>$seriesName: <b>$dataValue</b>\"\n        }, {\n            \"value\": \"150\",\n            \"toolText\": \"<b>$label</b><br>$seriesName: <b>$dataValue</b>\"\n        }]\n    }]\n}",
    "ember-build": "/* eslint-env node */\n'use strict';\n\nconst EmberAddon = require('ember-cli/lib/broccoli/ember-addon');\n\nmodule.exports = function (defaults) {\n    let app = new EmberAddon(defaults, {\n        // Add options here\n    });\n\n    // Import FusionCharts library\n    app.import('bower_components/fusioncharts/fusioncharts.js');    \n    app.import('bower_components/fusioncharts/fusioncharts.powercharts.js');\n    app.import('bower_components/fusioncharts/themes/fusioncharts.theme.fusion.js');    \n\n    /*\n      This build file specifies the options for the dummy test app of this\n      addon, located in `/tests/dummy`\n      This build file does *not* influence how the addon or the app using it\n      behave. You most likely want to be modifying `./index.js` or app's build file\n    */\n\n    return app.toTree();\n};"
  },
  "render-alert": {
    "code": "import Component from '@ember/component';\n\nvar message = 'Status: ';\n\nexport default Component.extend({    \n    width: 600,\n    height: 400,\n    type: 'column2d',\n    dataFormat: 'json',\n    dataSource: { /* see data tab */ },    \n    events: null,\n    message: 'Drag any column for years 2017 or 2018 to see updated value along with the label',\n\n    init() {\n        this._super(...arguments);\n        const self = this;\n        this.set('events', {\n            beforedataupdate: function() {\n                message += 'beforeDataUpdate, ';\n                self.set('message', message);\n            },\n            dataupdated: function() {\n                message += 'dataUpdated, ';\n                self.set('message', message);\n            },\n            drawcomplete: function() {\n                message += 'drawComplete, ';\n                self.set('message', message);\n            },\n            rendercomplete: function() {\n                message += 'renderComplete';\n                self.set('message', message);\n            }            \n        });\n    }    \n});",
    "html": "{{fusioncharts-xt\n    width=width\n    height=height\n    type=type\n    dataFormat=dataFormat\n    dataSource=dataSource\n    events=events}}    \n\n<p style=\"padding: 10px; background: rgb(245, 242, 240);\">{{ message }}</p>\n",
    "data": "{\r\n    \"chart\": {\r\n        \"caption\": \"Countries With Most Oil Reserves [2017-18]\",\r\n        \"subCaption\": \"In MMbbl = One Million barrels\",\r\n        \"xAxisName\": \"Country\",\r\n        \"yAxisName\": \"Reserves (MMbbl)\",\r\n        \"numberSuffix\": \"K\",\r\n        \"theme\": \"fusion\"\r\n    },\r\n    \"data\": [\r\n        {\r\n            \"label\": \"Venezuela\",\r\n            \"value\": \"290\"\r\n        },\r\n        {\r\n            \"label\": \"Saudi\",\r\n            \"value\": \"260\"\r\n        },\r\n        {\r\n            \"label\": \"Canada\",\r\n            \"value\": \"180\"\r\n        },\r\n        {\r\n            \"label\": \"Iran\",\r\n            \"value\": \"140\"\r\n        },\r\n        {\r\n            \"label\": \"Russia\",\r\n            \"value\": \"115\"\r\n        },\r\n        {\r\n            \"label\": \"UAE\",\r\n            \"value\": \"100\"\r\n        },\r\n        {\r\n            \"label\": \"US\",\r\n            \"value\": \"30\"\r\n        },\r\n        {\r\n            \"label\": \"China\",\r\n            \"value\": \"30\"\r\n        }\r\n    ]\r\n}\r\n",
    "ember-build": "/* eslint-env node */\n'use strict';\n\nconst EmberAddon = require('ember-cli/lib/broccoli/ember-addon');\n\nmodule.exports = function (defaults) {\n    let app = new EmberAddon(defaults, {\n        // Add options here\n    });\n\n    // Import FusionCharts library\n    app.import('bower_components/fusioncharts/fusioncharts.js');\n    app.import('bower_components/fusioncharts/fusioncharts.charts.js');        \n    app.import('bower_components/fusioncharts/themes/fusioncharts.theme.fusion.js');    \n\n    /*\n      This build file specifies the options for the dummy test app of this\n      addon, located in `/tests/dummy`\n      This build file does *not* influence how the addon or the app using it\n      behave. You most likely want to be modifying `./index.js` or app's build file\n    */\n\n    return app.toTree();\n};"
  },
  "dynamically-add-chart": {
    "code": "import Component from '@ember/component';\n\nexport default Component.extend({    \n    width: 600,\n    height: 400,\n    type: 'column2d',\n    dataFormat: 'json',\n    dataSource: { /* see data tab */ },\n    message: 'Click the below buttons to add an event dynamically to a chart',\n    buttonText: 'ADD/LISTEN TO DATAPLOTCLICK EVENT',\n    actions: {\n        addEvent() {\n            const self = this;\n            if(this.get('buttonText') === 'ADD/LISTEN TO DATAPLOTCLICK EVENT') {\n                this.set('message', 'Click on the plot to see the value along with the label');\n                this.set('buttonText', 'REMOVE DATAPLOTCLICK EVENT');                \n                this.set('events', {\n                    dataplotclick: function (eventObj, dataObj) {\n                        self.set('message', 'You have clicked on plot ' + dataObj.categoryLabel + ' whose value is ' + dataObj.displayValue);\n                    }\n                });\n            }\n            else {\n                this.set('message', 'Click the below buttons to add an event dynamically to a chart');\n                this.set('buttonText', 'ADD/LISTEN TO DATAPLOTCLICK EVENT');\n                this.set('events', {\n                    dataplotclick: null\n                });\n            }\n        }\n    }\n});",
    "html": "{{fusioncharts-xt\n    width=width\n    height=height\n    type=type\n    dataFormat=dataFormat\n    dataSource=dataSource}}\n\n<div style=\"padding: 0px; background: rgb(255, 255, 255);\" id=\"message\">\n    {{ message }}\n</div>\n<div style=\"display: flex; justify-content: center; margin: 0px\">\n    <button class=\"btn btn-outline-secondary btn-sm\" id=\"track\" {{ action 'addEvent' }}>{{ buttonText }}</button>    \n</div>",
    "data": "{\n    \"chart\": {\n        \"caption\": \"Countries With Most Oil Reserves [2017-18]\",\n        \"subCaption\": \"In MMbbl = One Million barrels\",\n        \"xAxisName\": \"Country\",\n        \"yAxisName\": \"Reserves (MMbbl)\",\n        \"numberSuffix\": \"K\",\n        \"theme\": \"fusion\"\n    },\n    \"data\": [\n        {\n            \"label\": \"Venezuela\",\n            \"value\": \"290\"\n        },\n        {\n            \"label\": \"Saudi\",\n            \"value\": \"260\"\n        },\n        {\n            \"label\": \"Canada\",\n            \"value\": \"180\"\n        },\n        {\n            \"label\": \"Iran\",\n            \"value\": \"140\"\n        },\n        {\n            \"label\": \"Russia\",\n            \"value\": \"115\"\n        },\n        {\n            \"label\": \"UAE\",\n            \"value\": \"100\"\n        },\n        {\n            \"label\": \"US\",\n            \"value\": \"30\"\n        },\n        {\n            \"label\": \"China\",\n            \"value\": \"30\"\n        }\n    ]\n}",
    "ember-build": "/* eslint-env node */\n'use strict';\n\nconst EmberAddon = require('ember-cli/lib/broccoli/ember-addon');\n\nmodule.exports = function (defaults) {\n    let app = new EmberAddon(defaults, {\n        // Add options here\n    });\n\n    // Import FusionCharts library\n    app.import('bower_components/fusioncharts/fusioncharts.js');\n    app.import('bower_components/fusioncharts/fusioncharts.charts.js');        \n    app.import('bower_components/fusioncharts/themes/fusioncharts.theme.fusion.js');    \n\n    /*\n      This build file specifies the options for the dummy test app of this\n      addon, located in `/tests/dummy`\n      This build file does *not* influence how the addon or the app using it\n      behave. You most likely want to be modifying `./index.js` or app's build file\n    */\n\n    return app.toTree();\n};"
  },
  "slice-data-plots": {
    "code": "import Component from '@ember/component';\n\nexport default Component.extend({    \n    id: 'slice-chart',    \n    width: 600,\n    height: 400,\n    type: 'pie2d',\n    dataFormat: 'json',\n    dataSource: { /* see data tab */ },\n    actions: {\n        changeItem(value) {\n            var val = parseInt(value);\n            if(val < 0) {\n                for (var i in dataSource.data) {\n                    FusionCharts.items['slice-chart'].slicePlotItem(i, false)\n                }\n            }\n            else {\n                FusionCharts.items['slice-chart'].slicePlotItem(val, true);\n            }\n        }        \n    }\n});",
    "html": "{{fusioncharts-xt\n    id=id\n    width=width\n    height=height\n    type=type\n    dataFormat=dataFormat\n    dataSource=dataSource}}\n\n<div style=\"display: flex; position: absolute; bottom: 2px;\">\n    <div id=\"select-text\">Choose an item:</div>\n    <div class=\"change-type\">\n        <div id=\"radio1\">\n            <input name=\"item-selector\" id=\"radioButton1\" type=\"radio\" checked=\"checked\" value=\"-1\" onchange={{ action 'changeItem' value='target.value'}}/>\n            <label for=\"radioButton1\">None</label>\n        </div>\n        <div id=\"radio2\">\n            <input name=\"item-selector\" id=\"radioButton2\" type=\"radio\" value=\"0\" onchange={{ action 'changeItem' value='target.value'}}/>\n            <label for=\"radioButton2\">Apache</label>\n        </div>\n        <div id=\"radio3\">\n            <input name=\"item-selector\" id=\"radioButton3\" type=\"radio\" value=\"1\" onchange={{ action 'changeItem' value='target.value'}}/>\n            <label for=\"radioButton3\">Microsoft</label>\n        </div>\n        <div id=\"radio4\">\n            <input name=\"item-selector\" id=\"radioButton4\" type=\"radio\" value=\"2\" onchange={{ action 'changeItem' value='target.value'}}/>\n            <label for=\"radioButton4\">Zeus</label>\n        </div>\n        <div id=\"radio5\">\n            <input name=\"item-selector\" id=\"radioButton5\" type=\"radio\" value=\"3\" onchange={{ action 'changeItem' value='target.value'}}/>\n            <label for=\"radioButton5\">Other</label>\n        </div>\n    </div>\n</div>",
    "data": "{\n    \"chart\": {\n        \"caption\": \"Market Share of Web Servers\",\n        \"plottooltext\": \"<b>$percentValue</b> of web servers run on $label servers\",\n        \"showLegend\": \"1\",\n        \"showPercentValues\": \"1\",\n        \"legendPosition\": \"bottom\",\n        \"useDataPlotColorForLabels\": \"1\",\n        \"theme\": \"fusion\"\n    },\n    \"data\": [\n        {\n            \"label\": \"Apache\",\n            \"value\": \"32647479\"\n        }, \n        {\n            \"label\": \"Microsoft\",\n            \"value\": \"22100932\"\n        }, \n        {\n            \"label\": \"Zeus\",\n            \"value\": \"14376\"\n        }, \n        {\n            \"label\": \"Other\",\n            \"value\": \"18674221\"\n        }\n    ]\n}",
    "ember-build": "/* eslint-env node */\n'use strict';\n\nconst EmberAddon = require('ember-cli/lib/broccoli/ember-addon');\n\nmodule.exports = function (defaults) {\n    let app = new EmberAddon(defaults, {\n        // Add options here\n    });\n\n    // Import FusionCharts library\n    app.import('bower_components/fusioncharts/fusioncharts.js');\n    app.import('bower_components/fusioncharts/fusioncharts.charts.js');        \n    app.import('bower_components/fusioncharts/themes/fusioncharts.theme.fusion.js');    \n\n    /*\n      This build file specifies the options for the dummy test app of this\n      addon, located in `/tests/dummy`\n      This build file does *not* influence how the addon or the app using it\n      behave. You most likely want to be modifying `./index.js` or app's build file\n    */\n\n    return app.toTree();\n};"
  },
  "responsive-charts": {
    "code": "import Component from '@ember/component';\n\nexport default Component.extend({    \n    id: 'responsive-chart',    \n    width: 600,\n    height: 350,\n    type: 'column2d',\n    dataFormat: 'json',\n    dataSource: {/* see data tab */},        \n    actions: {\n        resize(value) {\n            var dimension = value.split(',');\n            FusionCharts.items['responsive-chart'].resizeTo(dimension[0], dimension[1]);\n        }        \n    }    \n});",
    "html": "{{fusioncharts-xt\n    id=id\n    width=width\n    height=height\n    type=type\n    dataFormat=dataFormat\n    dataSource=dataSource}}    \n\n<div id=\"config-container\">\n    <span id=\"select-text\">Choose a dimension:</span>\n    <div class=\"change-type\">\n      <div id=\"radio1\">\n        <input name=\"theme-selecter\" id=\"radioButton1\" type=\"radio\" value=\"400,250\" onchange={{ action \"resize\" value=\"target.value\" }}/>\n        <label for=\"radioButton1\">400 &#10005; 250</label>\n      </div>\n      <div id=\"radio2\">\n        <input name=\"theme-selecter\" id=\"radioButton2\" type=\"radio\" value=\"600,350\" checked=\"checked\" onchange={{ action \"resize\" value=\"target.value\" }}/>\n        <label for=\"radioButton2\">600 &#10005; 350</label>\n      </div>\n      <div id=\"radio3\">\n        <input name=\"theme-selecter\" id=\"radioButton3\" type=\"radio\" value=\"700,400\" onchange={{ action \"resize\" value=\"target.value\" }}/>\n        <label for=\"radioButton3\">700 &#10005; 400</label>\n      </div>\n    </div>\n  </div>",
    "data": "{\n    \"chart\": {\n        \"caption\": \"Countries With Most Oil Reserves [2017-18]\",\n        \"subCaption\": \"In MMbbl = One Million barrels\",\n        \"xAxisName\": \"Country\",\n        \"yAxisName\": \"Reserves (MMbbl)\",\n        \"numberSuffix\": \"K\",\n        \"theme\": \"fusion\"\n    },\n    \"data\": [\n        {\n            \"label\": \"Venezuela\",\n            \"value\": \"290\"\n        },\n        {\n            \"label\": \"Saudi\",\n            \"value\": \"260\"\n        },\n        {\n            \"label\": \"Canada\",\n            \"value\": \"180\"\n        },\n        {\n            \"label\": \"Iran\",\n            \"value\": \"140\"\n        },\n        {\n            \"label\": \"Russia\",\n            \"value\": \"115\"\n        },\n        {\n            \"label\": \"UAE\",\n            \"value\": \"100\"\n        },\n        {\n            \"label\": \"US\",\n            \"value\": \"30\"\n        },\n        {\n            \"label\": \"China\",\n            \"value\": \"30\"\n        }\n    ]\n}",
    "ember-build": "/* eslint-env node */\n'use strict';\n\nconst EmberAddon = require('ember-cli/lib/broccoli/ember-addon');\n\nmodule.exports = function (defaults) {\n    let app = new EmberAddon(defaults, {\n        // Add options here\n    });\n\n    // Import FusionCharts library\n    app.import('bower_components/fusioncharts/fusioncharts.js');\n    app.import('bower_components/fusioncharts/fusioncharts.charts.js');        \n    app.import('bower_components/fusioncharts/themes/fusioncharts.theme.fusion.js');    \n\n    /*\n      This build file specifies the options for the dummy test app of this\n      addon, located in `/tests/dummy`\n      This build file does *not* influence how the addon or the app using it\n      behave. You most likely want to be modifying `./index.js` or app's build file\n    */\n\n    return app.toTree();\n};"
  },
  "change-chart-type": {
    "code": "import Component from '@ember/component';\n\nexport default Component.extend({    \n    id: 'run-time-chart',    \n    width: 600,\n    height: 350,\n    type: 'column2d',\n    dataFormat: 'json',\n    dataSource: {/* see data tab */},        \n    actions: {\n        changeChart(value) {\n            FusionCharts.items['run-time-chart'].chartType(value);\n        }        \n    }    \n});",
    "html": "{{fusioncharts-xt\n    id=id\n    width=width\n    height=height\n    type=type\n    dataFormat=dataFormat\n    dataSource=dataSource}}    \n\n<div id=\"config-container\">\n    <span id=\"select-text\">Choose a dimension:</span>\n    <div class=\"change-type\">\n      <div id=\"radio1\">\n        <input name=\"chart-selector\" id=\"radioButton1\" type=\"radio\" value=\"column2d\" checked=\"checked\" onchange={{ action \"changeChart\" value=\"target.value\" }}/>\n        <label for=\"radioButton1\">Column 2D Chart</label>\n      </div>\n      <div id=\"radio2\">\n        <input name=\"chart-selector\" id=\"radioButton2\" type=\"radio\" value=\"bar2d\" onchange={{ action \"changeChart\" value=\"target.value\" }}/>\n        <label for=\"radioButton2\">Bar 2D Chart</label>\n      </div>\n      <div id=\"radio3\">\n        <input name=\"chart-selector\" id=\"radioButton3\" type=\"radio\" value=\"line\" onchange={{ action \"changeChart\" value=\"target.value\" }}/>\n        <label for=\"radioButton3\">Line Chart</label>\n      </div>\n    </div>\n  </div>",
    "data": "{\r\n    \"chart\": {\r\n        \"caption\": \"Countries With Most Oil Reserves [2017-18]\",\r\n        \"subCaption\": \"In MMbbl = One Million barrels\",\r\n        \"xAxisName\": \"Country\",\r\n        \"yAxisName\": \"Reserves (MMbbl)\",\r\n        \"numberSuffix\": \"K\",\r\n        \"theme\": \"fusion\"\r\n    },\r\n    \"data\": [\r\n        {\r\n            \"label\": \"Venezuela\",\r\n            \"value\": \"290\"\r\n        },\r\n        {\r\n            \"label\": \"Saudi\",\r\n            \"value\": \"260\"\r\n        },\r\n        {\r\n            \"label\": \"Canada\",\r\n            \"value\": \"180\"\r\n        },\r\n        {\r\n            \"label\": \"Iran\",\r\n            \"value\": \"140\"\r\n        },\r\n        {\r\n            \"label\": \"Russia\",\r\n            \"value\": \"115\"\r\n        },\r\n        {\r\n            \"label\": \"UAE\",\r\n            \"value\": \"100\"\r\n        },\r\n        {\r\n            \"label\": \"US\",\r\n            \"value\": \"30\"\r\n        },\r\n        {\r\n            \"label\": \"China\",\r\n            \"value\": \"30\"\r\n        }\r\n    ]\r\n}\r\n",
    "ember-build": "/* eslint-env node */\n'use strict';\n\nconst EmberAddon = require('ember-cli/lib/broccoli/ember-addon');\n\nmodule.exports = function (defaults) {\n    let app = new EmberAddon(defaults, {\n        // Add options here\n    });\n\n    // Import FusionCharts library\n    app.import('bower_components/fusioncharts/fusioncharts.js');\n    app.import('bower_components/fusioncharts/fusioncharts.charts.js');        \n    app.import('bower_components/fusioncharts/themes/fusioncharts.theme.fusion.js');    \n\n    /*\n      This build file specifies the options for the dummy test app of this\n      addon, located in `/tests/dummy`\n      This build file does *not* influence how the addon or the app using it\n      behave. You most likely want to be modifying `./index.js` or app's build file\n    */\n\n    return app.toTree();\n};"
  },
  "use-annotations": {
    "code": "import Component from '@ember/component';\n\nexport default Component.extend({\n    width: 600,\n    height: 400,\n    type: 'spline',\n    dataFormat: 'json',\n    dataSource: {/* see data tab */}\n});",
    "html": "{{fusioncharts-xt\n    width=width\n    height=height\n    type=type\n    dataFormat=dataFormat\n    dataSource=dataSource}}",
    "data": "{\n    \"chart\": {\n        \"caption\": \"Bakersfield Central - Total footfalls\",\n        \"subCaption\": \"Last week\",\n        \"xAxisName\": \"Day\",\n        \"yAxisName\": \"No. of Visitors (In 1000s)\",\n        \"showValues\": \"0\",\n        \"theme\": \"fusion\"\n    },\n    \"data\": [\n        {\n            \"label\": \"Mon\",\n            \"value\": \"15123\"\n        },\n        {\n            \"label\": \"Tue\",\n            \"value\": \"14233\"\n        },\n        {\n            \"label\": \"Wed\",\n            \"value\": \"25507\"\n        },\n        {\n            \"label\": \"Thu\",\n            \"value\": \"9110\"\n        },\n        {\n            \"label\": \"Fri\",\n            \"value\": \"15529\"\n        },\n        {\n            \"label\": \"Sat\",\n            \"value\": \"20803\"\n        },\n        {\n            \"label\": \"Sun\",\n            \"value\": \"19202\"\n        }\n    ],\n    \"annotations\": {\n        \"groups\": [\n            {\n                \"id\": \"anchor-highlight\",\n                \"items\": [\n                    {\n                        \"id\": \"high-star\",\n                        \"type\": \"circle\",\n                        \"x\": \"$dataset.0.set.2.x\",\n                        \"y\": \"$dataset.0.set.2.y\",\n                        \"radius\": \"12\",\n                        \"color\": \"#6baa01\",\n                        \"border\": \"2\",\n                        \"borderColor\": \"#f8bd19\"\n                    },\n                    {\n                        \"id\": \"label\",\n                        \"type\": \"text\",\n                        \"text\": \"Highest footfall 25.5K\",\n                        \"fillcolor\": \"#6baa01\",\n                        \"rotate\": \"90\",\n                        \"x\": \"$dataset.0.set.2.x+75\",\n                        \"y\": \"$dataset.0.set.2.y-2\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "ember-build": "/* eslint-env node */\n'use strict';\n\nconst EmberAddon = require('ember-cli/lib/broccoli/ember-addon');\n\nmodule.exports = function (defaults) {\n    let app = new EmberAddon(defaults, {\n        // Add options here\n    });\n\n    // Import FusionCharts library\n    app.import('bower_components/fusioncharts/fusioncharts.js');\n    app.import('bower_components/fusioncharts/fusioncharts.charts.js');        \n    app.import('bower_components/fusioncharts/themes/fusioncharts.theme.fusion.js');    \n\n    /*\n      This build file specifies the options for the dummy test app of this\n      addon, located in `/tests/dummy`\n      This build file does *not* influence how the addon or the app using it\n      behave. You most likely want to be modifying `./index.js` or app's build file\n    */\n\n    return app.toTree();\n};"
  },
  "update-chart-attribute-through-method": {
    "code": "import Component from '@ember/component';\n\nexport default Component.extend({    \n    id: 'method-api-chart',    \n    width: 600,\n    height: 350,\n    type: 'column2d',\n    dataFormat: 'json',\n    dataSource: {/* see data tab */},        \n    actions: {\n        changeCaption() {\n            FusionCharts.items['method-api-chart'].setChartAttribute('caption', 'Test-Caption');\n        },\n        changeXAxis() {\n            FusionCharts.items['method-api-chart'].setChartAttribute('xaxisname', 'Test X-Axis');\n        },\n        changeYAxis() {\n            FusionCharts.items['method-api-chart'].setChartAttribute('yaxisname', 'Test Y-Axis');\n        },\n        reset() {\n            var chart = FusionCharts.items['method-api-chart'];\n            chart.setChartAttribute('caption', 'Countries With Most Oil Reserves [2017-18]');\n            chart.setChartAttribute('xaxisname', 'Country');\n            chart.setChartAttribute('yaxisname', 'Reserves (MMbbl)');\n        }\n    }    \n});",
    "html": "{{fusioncharts-xt\n    id=id\n    width=width\n    height=height\n    type=type\n    dataFormat=dataFormat\n    dataSource=dataSource}}    \n\n<div style=\"justify-content: center; margin: 0px\">\n    <button class=\"btn btn-outline-secondary btn-sm\" id=\"caption\" {{ action 'changeCaption' }}>CHANGE CAPTION TO: CAPTION</button>\n    <button class=\"btn btn-outline-secondary btn-sm\" id=\"xaxis-name\" {{ action 'changeXAxis' }}>CHANGE X_AXIS NAME TO: X-AXIS NAME</button>\n    <button class=\"btn btn-outline-secondary btn-sm\" id=\"yaxis-name\" {{ action 'changeYAxis' }}>CHANGE Y_AXIS NAME TO: Y-AXIS NAME</button>\n    <button class=\"btn btn-outline-secondary btn-sm\" id=\"reset\" {{ action 'reset' }}>RESET</button>\n</div>",
    "data": "{\r\n    \"chart\": {\r\n        \"caption\": \"Countries With Most Oil Reserves [2017-18]\",\r\n        \"subCaption\": \"In MMbbl = One Million barrels\",\r\n        \"xAxisName\": \"Country\",\r\n        \"yAxisName\": \"Reserves (MMbbl)\",\r\n        \"numberSuffix\": \"K\",\r\n        \"theme\": \"fusion\"\r\n    },\r\n    \"data\": [\r\n        {\r\n            \"label\": \"Venezuela\",\r\n            \"value\": \"290\"\r\n        },\r\n        {\r\n            \"label\": \"Saudi\",\r\n            \"value\": \"260\"\r\n        },\r\n        {\r\n            \"label\": \"Canada\",\r\n            \"value\": \"180\"\r\n        },\r\n        {\r\n            \"label\": \"Iran\",\r\n            \"value\": \"140\"\r\n        },\r\n        {\r\n            \"label\": \"Russia\",\r\n            \"value\": \"115\"\r\n        },\r\n        {\r\n            \"label\": \"UAE\",\r\n            \"value\": \"100\"\r\n        },\r\n        {\r\n            \"label\": \"US\",\r\n            \"value\": \"30\"\r\n        },\r\n        {\r\n            \"label\": \"China\",\r\n            \"value\": \"30\"\r\n        }\r\n    ]\r\n}\r\n",
    "ember-build": "/* eslint-env node */\n'use strict';\n\nconst EmberAddon = require('ember-cli/lib/broccoli/ember-addon');\n\nmodule.exports = function (defaults) {\n    let app = new EmberAddon(defaults, {\n        // Add options here\n    });\n\n    // Import FusionCharts library\n    app.import('bower_components/fusioncharts/fusioncharts.js');\n    app.import('bower_components/fusioncharts/fusioncharts.charts.js');        \n    app.import('bower_components/fusioncharts/themes/fusioncharts.theme.fusion.js');    \n\n    /*\n      This build file specifies the options for the dummy test app of this\n      addon, located in `/tests/dummy`\n      This build file does *not* influence how the addon or the app using it\n      behave. You most likely want to be modifying `./index.js` or app's build file\n    */\n\n    return app.toTree();\n};"
  }   
}
